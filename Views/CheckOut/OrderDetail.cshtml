@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

	// building
	string iconBuidling = "<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='lucide lucide-building'><rect width='16' height='20' x='4' y='2' rx='2' ry='2' /><path d='M9 22v-4h6v4' /><path d='M8 6h.01' /><path d='M16 6h.01' /><path d='M12 6h.01' /><path d='M12 10h.01' /><path d='M12 14h.01' /><path d='M16 10h.01' /><path d='M16 14h.01' /><path d='M8 10h.01' /><path d='M8 14h.01' /></svg>";
	//card
	string iconCard = "<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='lucide lucide-credit-card'><rect width='20' height='14' x='2' y='5' rx='2' /><line x1='2' x2='22' y1='10' y2='10' /></svg>";
	// phone
	string iconPhone = "<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='lucide lucide-phone'><path d='M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z' /></svg>";

	// address
	string iconAddress = "<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='lucide lucide-map-pin-house'><path d='M15 22a1 1 0 0 1-1-1v-4a1 1 0 0 1 .445-.832l3-2a1 1 0 0 1 1.11 0l3 2A1 1 0 0 1 22 17v4a1 1 0 0 1-1 1z' /><path d='M18 10a8 8 0 0 0-16 0c0 4.993 5.539 10.193 7.399 11.799a1 1 0 0 0 .601.2' /><path d='M18 22v-3' /><circle cx='10' cy='10' r='3' /></svg>";
	// mail
	string iconMail = "<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='lucide lucide-at-sign'><circle cx='12' cy='12' r='4' /><path d='M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-4 8' /></svg>";
	// persion
	string iconPersion = "<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='lucide lucide-circle-user-round'><path d='M18 20a6 6 0 0 0-12 0' /><circle cx='12' cy='10' r='4' /><circle cx='12' cy='12' r='10' /></svg>";
}

<style>
	body {
		background-color: #f8f9fa;
	}

	.order-card {
		border-radius: 10px;
		box-shadow: 0 4px 8px rgba(0,0,0,0.1);
		background-color: white;
	}

	.header-section {
		border-bottom: 1px solid #eee;
	}

	.status-badge-paid {
		background-color: #e6f7f2;
		color: #28a745;
		font-weight: 600;
		padding: 5px 10px;
		border-radius: 20px;
	}

	.status-badge-fail {
		background-color: #dda15e;
		color: #780000;
		font-weight: 600;
		padding: 5px 10px;
		border-radius: 20px;
	}

	.status-text-paid {
		color: #28a745;
	}

	.status-text-fail {
		color: #780000;
	}

	.status-badge-pending {
		background-color: #fff8e6;
		color: #ffc107;
		font-weight: 600;
		padding: 5px 10px;
		border-radius: 20px;
	}

	.payment-info {
		background-color: #f8f9fa;
		border-radius: 8px;
		padding: 15px;
	}

	.user-avatar {
		width: 40px;
		height: 40px;
		border-radius: 50%;
		object-fit: cover;
	}

	.table-items th {
		font-weight: 600;
		color: #6c757d;
	}

	.action-button {
		border-radius: 25px;
		padding: 8px 20px;
	}
</style>
@{
	BookStore.Dtos.OrderDto.VnPayResponseQuery response = null;
	if (ViewBag.response != null)
	{
		response = ViewBag.response;
	}
	BookStore.Models.Order order = ViewBag.order;
	string formattedDate = order.OrderDate?.ToString("MMMM dd, yyyy");
}

<div style="position: relative; height: 100vh;">
	<img src="/image/bg_auth.jpg" alt="Background Image" style="width: 100%; height: 100%; object-fit: cover;">

	<div class="container py-5"
		 style="
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(255, 255, 255, 0.8);
        padding: 20px;
        border-radius: 8px;">
		<div class="order-card p-4 mb-4">
			<div class="header-section pb-3 mb-4">
				<div class="row align-items-center">
					<div class="col-md-6">
						<h4>Order #@(order.OrderId)</h4>
						<div class="d-flex align-items-center mt-2">

							@if (ViewBag.status)
							{

								<span class="status-badge-paid">Paid</span>
							}
							else
							{
								<span class="status-badge-fail">Fail</span>
							}

							<span class="ms-3 text-muted">@formattedDate</span>
						</div>
					</div>
					<div class="col-md-6 text-md-end">
						<span class="text-muted">Total Amount</span>
						<h3 class="mb-0">@(order.TotalAmount.Value.ToString("N0")) đ</h3>
					</div>
				</div>
			</div>

			<div class="row mb-4">
				<div class="col-md-6 mb-3 mb-md-0">
					<h6 class="text-muted mb-3">Customer Information</h6>
					<div class="payment-info">
						<div class="d-flex align-items-center mb-2">
							@* <img src="/api/placeholder/40/40" alt="Profile" class="user-avatar me-3"> *@
							<div>
								<h6 class="mb-0"> @order.User.Username</h6>
								<p class="mb-0 text-muted small">@Html.Raw(iconMail) @order.User.Email</p>
							</div>
						</div>
						<div class="mt-3">
							<p class="mb-1">@Html.Raw(iconBuidling) @order.User.Address</p>
							<p class="mb-0">@Html.Raw(iconPhone) @order.Phone</p>
						</div>
					</div>
				</div>

				<div class="col-md-6 " style="height:100%">
					<h6 class="text-muted mb-3">Payment Information</h6>
					<div class="payment-info">
						<div class="d-flex align-items-center mb-2">
							<div>
								@* <h6 class="mb-0">@order.User.Username</h6> *@
								@* <p class="mb-0 text-muted small">@order.User.Email</p> *@
							</div>
						</div>
						<div class="mt-3">

							@if (response != null)
							{
								<p class="mb-1"><i class="fas fa-credit-card me-2 text-muted"></i> @Html.Raw(iconCard) @response.CardType: @response.BankCode</p>
								<p class="mb-0"><i class="fas fa-building me-2 text-muted"></i>TransactionNo: @response.TransactionNo </p>
							}
							<p class="mb-0">
								<i class="fas fa-building me-2 text-muted"></i>Info:
								@if (ViewBag.status)
								{
									<span class="status-text-paid">@ViewBag.message</span>
								}
								else
								{
									<span class="status-text-fail">@ViewBag.message</span>
								}
							</p>
						</div>
					</div>
				</div>
			</div>

			<h6 class="text-muted mb-3">Order Items</h6>
			<div class="table-responsive">
				<table class="table table-items">
					<thead>
						<tr>
							<th>Image</th>
							<th>Item</th>
							<th>Description</th>
							<th class="text-center">Quantity</th>
							<th class="text-end">Price</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var detail in order.OrderDetails)
						{
							<tr>
								<td>
									<img src="@detail.Book.Image" alt="image book"
										 style="width:100px" />
								</td>
								<td>
									<h6 class="mb-0">
										<a asp-action="BookDetail" asp-controller="Books" asp-route-id="@detail.Book.BookId">
											@detail.Book.Title
										</a>
									</h6>
								</td>
								<td>@detail.Book.Description</td>
								<td class="text-center">@detail.Quantity</td>
								<td class="text-end">@detail.Subtotal.Value.ToString("N0")</td>
							</tr>
						}

					</tbody>
					<tfoot>
						<tr>
							<td colspan="3" class="text-end"><strong>Total:</strong></td>
							<td class="text-end"><strong>@order.TotalAmount.Value.ToString("N0") đ</strong></td>
						</tr>
					</tfoot>
				</table>
			</div>

		</div>
	</div>
</div>
