@model List<BookStore.Models.Book>

@{

	string loveIcon = "<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='lucide lucide-heart'><path d='M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z' /></svg>";

}
<style>
	.card-product-grid {
		display: flex;
		flex-direction: column;
		height: 100%; /* Đảm bảo các card có chiều cao giống nhau */
	}

	.img-wrap {
		height: 250px; /* Đặt chiều cao cố định cho ảnh */
		display: flex;
		align-items: center;
		justify-content: center;
		overflow: hidden;
	}

		.img-wrap img {
			max-height: 100%;
			max-width: 100%;
			object-fit: cover; /* Đảm bảo ảnh không bị méo */
		}

	.info-wrap {
		flex-grow: 1; /* Giúp phần thông tin mở rộng để căn chỉnh */
		display: flex;
		flex-direction: column;
		justify-content: space-between;
	}

	.fix-height {
		min-height: 60px; /* Đảm bảo tiêu đề có chiều cao đồng đều */
	}

	.btn-primary {
		margin-top: auto; /* Đẩy nút "Add to cart" xuống đáy */
	}

	.title {
		display: -webkit-box;
		-webkit-line-clamp: 3; /* Giới hạn tối đa 3 dòng */
		-webkit-box-orient: vertical;
		overflow: hidden;
		text-overflow: ellipsis;
		height: 4.5em; /* Đặt chiều cao cố định (mỗi dòng khoảng 1.5em) */
		line-height: 1.5em; /* Đảm bảo mỗi dòng có cùng chiều cao */
	}

	aside {
		position: sticky;
		top: 20px; /* Cách mép trên 20px */
		height: fit-content;
	}

	.card-container {
		position: relative;
	}

	.btn-love {
		position: absolute;
		top: 10%;
		right: 20%;
	}

	.card-container {
		position: relative;
	}

	.btn-love {
		position: absolute;
		top: 10px;
		right: 10px;
		z-index: 10;
		opacity: 0;
		transition: opacity 0.3s ease, transform 0.3s ease;
	}

	.card-container:hover .btn-love {
		opacity: 1;
		transform: scale(1.1);
	}

	.card {
		transition: transform 0.3s ease, box-shadow 0.3s ease;
	}

	.card-container:hover .card {
		transform: translateY(-10px);
		box-shadow: 0 10px 20px rgba(0,0,0,0.1);
	}

	.card-img-top {
		transition: transform 0.3s ease;
	}

	.card-container:hover .card-img-top {
		transform: scale(1.05);
	}

</style>



<section id="popular-books" class="bookshelf py-5 my-5">
	<div class="container">
		<div class="row">
			@* filter *@
			<aside class="col-md-3">
				<div class="card p-3">
					<h5 class="card-title">Filter Books</h5>
					<form method="get" action="@Url.Action("ListBook")">
						<!-- Ô tìm kiếm -->
						<div class="mb-3">
							<label for="searchTitle" class="form-label">Search</label>
							<input type="text" class="form-control" id="searchTitle" name="searchTitle" value="@ViewBag.SearchTitle" placeholder="Enter title or author">
						</div>

						<!-- Bộ lọc theo danh mục -->
						<div class="mb-3">
							<label for="categoryId" class="form-label">Category</label>
							<select class="form-select" id="categoryId" name="categoryId">
								<option value="">All Categories</option>
								@foreach (var category in ViewBag.Categories)
								{
									<option value="@category.CategoryId" selected="@(ViewBag.CategoryId == category.CategoryId ? "selected" : null)">
										@category.CategoryName
									</option>
								}
							</select>
						</div>

						<!-- Bộ lọc theo giá -->
						<div class="mb-3">
							<label for="sortOrder" class="form-label">Sort by</label>
							<select class="form-select" id="sortOrder" name="sortOrder">
								<option value="">Default</option>
								<option value="title_asc" selected="@(ViewData["SortOrder"]?.ToString() == "title_asc" ? "selected" : null)">Title (A-Z)</option>
								<option value="title_desc" selected="@(ViewData["SortOrder"]?.ToString() == "title_desc" ? "selected" : null)">Title (Z-A)</option>
								<option value="price_asc" selected="@(ViewData["SortOrder"]?.ToString() == "price_asc" ? "selected" : null)">Price (Low-High)</option>
								<option value="price_desc" selected="@(ViewData["SortOrder"]?.ToString() == "price_desc" ? "selected" : null)">Price (High-Low)</option>
							</select>
						</div>

						<!-- Nút Submit -->
						<button type="submit" class="btn btn-primary w-100">Apply Filter</button>
					</form>
				</div>
			</aside>

			<main class="col-md-9">

				<header class="border-bottom mb-4 pb-3">
					<div class="form-inline">
						<span class="mr-md-auto">@Model.Count Items found </span>

					</div>
				</header><!-- sect-heading -->
				@* book list *@
				@* <div class="row"> *@
					<div class="row row-cols-1 row-cols-sm-2 row-cols-md-4  g-4 gap-3 mt-2"
						 style="display: flex; justify-content:center">
						@* @for (int i = 1; i <= 6; i++) *@
						@foreach (BookStore.Models.Book b in Model)
						{
							<div class="col card-container">
								<button class="btn btn-outline-danger btn-love z-3  btn-circle">
									@Html.Raw(loveIcon)
								</button>
								<div class="card h-100 border-0" style="width: 18rem;">
									<div style="overflow: hidden;">
										<img src="@b.Image" class="card-img-top z-0" alt="...">
									</div>
									<div class="card-body">
										<h5 class="card-title">@b.Title</h5>
										<p class="card-text">@b.Author</p>
										<p class="">@b.Price ₫</p>
										<a asp-action="BookDetail" asp-controller="Books" asp-route-id="@b.BookId" class="btn btn-primary">Read More</a>
									</div>
								</div>
							</div>
						}
					</div>
					<!-- 🔄 Pagination -->
					<nav class="mt-4" aria-label="Page navigation">
						<ul class="pagination">
							<!-- Nút Previous -->
							<li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
								<a class="page-link" href="@Url.Action("ListBook", new { searchTitle = ViewBag.SearchTitle, categoryId = ViewBag.CategoryId, sortOrder = ViewData["SortOrder"], page = ViewBag.CurrentPage - 1 })">Previous</a>
							</li>

							<!-- Số trang -->
							@for (int i = 1; i <= ViewBag.TotalPages; i++)
							{
								<li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
									<a class="page-link" href="@Url.Action("ListBook", new { searchTitle = ViewBag.SearchTitle, categoryId = ViewBag.CategoryId, sortOrder = ViewData["SortOrder"], page = i })">@i</a>
								</li>
							}

							<!-- Nút Next -->
							<li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
								<a class="page-link" href="@Url.Action("ListBook", new { searchTitle = ViewBag.SearchTitle, categoryId = ViewBag.CategoryId, sortOrder = ViewData["SortOrder"], page = ViewBag.CurrentPage + 1 })">Next</a>
							</li>
						</ul>
					</nav>



			</main>
		</div>
	</div>
</section>





